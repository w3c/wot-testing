{
  "@context": [
    "https://www.w3.org/2022/wot/td/v1.1",
    {
      "time": "http://www.w3.org/2006/time#"
    }
  ],
  "title": "Connection Status",
  "@type": "Thing",
  "id": "urn:org.eclipse.ditto:oauth-floor-lamp-1/features/ConnectionStatus",
  "base": "https://ditto.eclipseprojects.io/api/2/things/org.eclipse.ditto:floor-lamp-1/features/ConnectionStatus",
  "version": {
    "model": "1.0.0",
    "instance": "1.0.0"
  },
  "links": [
    {
      "rel": "collection",
      "href": "https://ditto.eclipseprojects.io/api/2/things/org.eclipse.ditto:floor-lamp-1",
      "type": "application/td+json"
    },
    {
      "rel": "type",
      "href": "https://eclipse.github.io/ditto-examples/wot/models/connection-status-1.0.0.tm.jsonld",
      "type": "application/tm+json"
    }
  ],
  "security": "oauth2_google_sc",
  "securityDefinitions": {
    "oauth2_google_sc": {
      "scheme": "oauth2",
      "authorization": "https://accounts.google.com/o/oauth2/v2/auth",
      "token": "https://oauth2.googleapis.com/token",
      "scopes": [
        "openid"
      ],
      "flow": "code"
    }
  },
  "support": "https://www.eclipse.org/ditto/",
  "created": "2022-03-10T17:02:54.432064234Z",
  "forms": [
    {
      "op": "readallproperties",
      "href": "/properties{?channel,timeout}",
      "htv:methodName": "GET",
      "contentType": "application/json",
      "additionalResponses": [
        {
          "success": false,
          "schema": "dittoError"
        }
      ]
    },
    {
      "op": "readmultipleproperties",
      "href": "/properties{?fields,channel,timeout}",
      "htv:methodName": "GET",
      "contentType": "application/json",
      "additionalResponses": [
        {
          "success": false,
          "schema": "dittoError"
        }
      ]
    },
    {
      "op": "writeallproperties",
      "href": "/properties{?channel,timeout,response-required}",
      "htv:methodName": "PUT",
      "contentType": "application/json",
      "additionalResponses": [
        {
          "success": false,
          "schema": "dittoError"
        }
      ]
    },
    {
      "op": "writemultipleproperties",
      "href": "/properties{?channel,timeout,response-required}",
      "htv:methodName": "PATCH",
      "contentType": "application/merge-patch+json",
      "additionalResponses": [
        {
          "success": false,
          "schema": "dittoError"
        }
      ]
    },
    {
      "op": [
        "observeallproperties",
        "unobserveallproperties"
      ],
      "href": "/properties",
      "htv:methodName": "GET",
      "subprotocol": "sse",
      "contentType": "text/event-stream",
      "additionalResponses": [
        {
          "success": false,
          "schema": "dittoError"
        }
      ]
    },
    {
      "op": [
        "subscribeallevents",
        "unsubscribeallevents"
      ],
      "href": "/outbox/messages",
      "htv:methodName": "GET",
      "subprotocol": "sse",
      "contentType": "text/event-stream",
      "additionalResponses": [
        {
          "success": false,
          "schema": "dittoError"
        }
      ]
    }
  ],
  "properties": {
    "readySince": {
      "@type": "time:Instant",
      "title": "Ready since",
      "description": "Timestamp when the device or the connectivity endpoint signals that the device is connected and stays connected at least for some time and is ready for receiving information.",
      "type": "string",
      "format": "date-time",
      "unit": "xsd:dateTime",
      "observable": true,
      "forms": [
        {
          "op": "readproperty",
          "href": "/properties/readySince{?channel,timeout}",
          "htv:methodName": "GET",
          "contentType": "application/json",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        },
        {
          "op": "writeproperty",
          "href": "/properties/readySince{?channel,timeout,response-required}",
          "htv:methodName": "PUT",
          "contentType": "application/json",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        },
        {
          "op": "writeproperty",
          "href": "/properties/readySince{?channel,timeout,response-required}",
          "htv:methodName": "PATCH",
          "contentType": "application/merge-patch+json",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        },
        {
          "op": [
            "observeproperty",
            "unobserveproperty"
          ],
          "href": "/properties/readySince",
          "htv:methodName": "GET",
          "subprotocol": "sse",
          "contentType": "text/event-stream",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        }
      ]
    },
    "readyUntil": {
      "@type": "time:Instant",
      "title": "Ready until",
      "description": "Timestamp until when device or the connectivity endpoint signals that it stays ready for receiving information; if it signals that it stays connected and is ready until further notice then this timestamp is symbolically set to a timestamp that is at least 1 year ahead of now.",
      "type": "string",
      "format": "date-time",
      "unit": "xsd:dateTime",
      "observable": true,
      "forms": [
        {
          "op": "readproperty",
          "href": "/properties/readyUntil{?channel,timeout}",
          "htv:methodName": "GET",
          "contentType": "application/json",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        },
        {
          "op": "writeproperty",
          "href": "/properties/readyUntil{?channel,timeout,response-required}",
          "htv:methodName": "PUT",
          "contentType": "application/json",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        },
        {
          "op": "writeproperty",
          "href": "/properties/readyUntil{?channel,timeout,response-required}",
          "htv:methodName": "PATCH",
          "contentType": "application/merge-patch+json",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        },
        {
          "op": [
            "observeproperty",
            "unobserveproperty"
          ],
          "href": "/properties/readyUntil",
          "htv:methodName": "GET",
          "subprotocol": "sse",
          "contentType": "text/event-stream",
          "additionalResponses": [
            {
              "success": false,
              "schema": "dittoError"
            }
          ]
        }
      ]
    }
  },
  "uriVariables": {
    "channel": {
      "type": "string",
      "title": "The Ditto channel to interact with.",
      "description": "Defines to which channel to route the command: 'twin' (digital twin) or 'live' (the device).",
      "enum": [
        "twin",
        "live"
      ],
      "default": "twin"
    },
    "timeout": {
      "type": "integer",
      "title": "The timeout to apply.",
      "description": "Defines how long the backend should wait (in seconds) for completion of the request. A value of '0' applies fire and forget semantics for the command.",
      "minimum": 0,
      "maximum": 60,
      "default": 60
    },
    "response-required": {
      "type": "boolean",
      "title": "If a response is required.",
      "description": "Defines whether a response is required to the API call or not.",
      "default": true
    },
    "fields": {
      "type": "string",
      "title": "Fields to select.",
      "description": "Contains a comma-separated list of fields (e.g. property names) to be included in the returned JSON."
    }
  },
  "schemaDefinitions": {
    "dittoError": {
      "type": "object",
      "title": "Ditto error.",
      "description": "Provides additional information about an occurred error and how to resolve it.",
      "properties": {
        "description": {
          "type": "string",
          "title": "Error description.",
          "description": "Contains further information about the error e.g. a hint what caused the problem and how to solve it."
        },
        "error": {
          "type": "string",
          "title": "Error code identifier.",
          "description": "The error code or identifier that uniquely identifies the error."
        },
        "message": {
          "type": "string",
          "title": "Error message.",
          "description": "The human readable message that explains what went wrong during the execution of a command/message."
        },
        "href": {
          "type": "string",
          "title": "Error link.",
          "description": "A link to further information about the error and how to fix it.",
          "format": "uri"
        },
        "status": {
          "type": "integer",
          "title": "Status code.",
          "description": "The status code of the error with HTTP status code semantics (e.g.: 4xx for user errors, 5xx for server errors).",
          "minimum": 400,
          "maximum": 599
        }
      },
      "required": [
        "status",
        "error",
        "message"
      ]
    }
  }
}
